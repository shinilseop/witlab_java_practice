package UI;

import java.awt.Container;
import java.awt.GridLayout;
import java.awt.event.KeyEvent;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

import Tetris.Tetris;

public class GameUI extends UI implements Runnable {

	JPanel jpTetris;
	JLabel jlBlock[][];

	ImageIcon iiNext;
	JPanel jpOther;
	JLabel jlNextT, jlNext, jlScore, jlTimer;

	Tetris gc;
	boolean isRun;

	GameUI(UIChanger uic) {
		super(uic);

		//init_left
		jpTetris = new JPanel(new GridLayout(20, 10));
		jlBlock = new JLabel[20][10];
		for (int i = 0; i < jlBlock.length; i++) {
			for (int j = 0; j < jlBlock[0].length; j++) {
				jlBlock[i][j] = new JLabel(new ImageIcon("image/black_block.png"));
			}
		}
		
		//init_right
		jpOther = new JPanel(null);
		iiNext = new ImageIcon("image/blue_block_full.png");
		jlNextT = new JLabel("다음 블록");
		jlNextT.setBounds(50, 20, 120, 100);
		jlNext = new JLabel(iiNext);
		jlScore = new JLabel("스코어 : ");
		jlScore.setBounds(50, 140, 120, 30);
		jlTimer = new JLabel("진행시간 : ");
		jlTimer.setBounds(50, 190, 120, 30);

		isRun = true;
		gc = new Tetris();

		Container ct = getContentPane();
		ct.setLayout(new GridLayout(1,2));
		ct.add(jpTetris);
		ct.add(jpOther);
		
		setTitle("테트리스");
		setSize(800,600);
		setResizable(false);
		setLocationRelativeTo(null);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setVisible(true);
		
		//set_left
		for (int i = 0; i < jlBlock.length; i++) {
			for (int j = 0; j < jlBlock[0].length; j++) {
				jpTetris.add(jlBlock[i][j]);
			}
		}
		
		//set_right
		jpOther.add(jlNextT);
		jpOther.add(jlNext);
		jpOther.add(jlScore);
		jpOther.add(jlTimer);
		
		//set_next_block
		jpNext.add(jlNextT);
		jpNext.add(jlNext);
	}

	public void run() {
		while (isRun) {

		}
	}

	@Override
	public void keyPressed(KeyEvent e) {
		// TODO Auto-generated method stub
		int key = e.getKeyCode();
		if (key == KeyEvent.VK_UP) {

		} else if (key == KeyEvent.VK_LEFT) {

		} else if (key == KeyEvent.VK_RIGHT) {

		} else if (key == KeyEvent.VK_DOWN) {

		} else if (key == KeyEvent.VK_SPACE) {

		}
	}
}
