package Tetris;

public class BlockIndexArray {
	int block_index[][][] = { { { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 } }, { { 4, 0 }, { 4, 1 }, { 5, 1 }, { 6, 1 } },
			{ { 6, 0 }, { 5, 0 }, { 5, 1 }, { 4, 1 } }, { { 6, 0 }, { 4, 1 }, { 5, 1 }, { 6, 1 } },
			{ { 5, 0 }, { 4, 1 }, { 5, 1 }, { 6, 1 } }, { { 4, 0 }, { 5, 0 }, { 5, 1 }, { 6, 1 } },
			{ { 3, 0 }, { 4, 0 }, { 5, 0 }, { 6, 0 } }, { { 4, 0 }, { 5, 0 }, { 4, 1 }, { 5, 1 } } };

	// rotate_Array int [회전상태][몇번째블록을][x,y]
	public int rotate_blue[][][] = { { { 2, 0 }, { 1, -1 }, { 0, 0 }, { -1, 1 } },
			{ { 0, 2 }, { 1, 1 }, { 0, 0 }, { -1, -1 } }, { { -2, 0 }, { -1, 1 }, { 0, 0 }, { 1, -1 } },
			{ { 0, -2 }, { -1, -1 }, { 0, 0, }, { 1, 1 } } };// 니은
	public int rotate_green[][][] = { { { 0, 2 }, { 1, 1 }, { 0, 0 }, { 1, -1 } },
			{ { -2, 0 }, { -1, 1 }, { 0, 0 }, { 1, 1 } }, { { 0, -2 }, { -1, -1 }, { 0, 0 }, { -1, 1 } },
			{ { 2, 0 }, { 1, -1 }, { 0, 0 }, { -1, -1 } } };// 오른쪽보는 리을
	public int rotate_orange[][][] = {{{0,2},{-1,1},{0,0},{1,-1}},
										{{-2,0},{-1,1},{0,0},{1,1}},
										{{0,-2},{1,-1},{0,0},{-1,1}},
										{{2,0},{1,1},{0,0},{-1,-1}}};// 니은 반대
	public int rotate_purple[][][] ={{{1,-1},{-1,1},{0,0},{1,-1}},
									{{-1,1},{-1,-1},{0,0},{1,1}},
									{{-1,-1},{1,-1},{0,0},{-1,1}},
									{{1,-1},{1,1},{0,0},{-1,-1}}};// 빠큐
	public int rotate_red[][][]={{{2,0},{1,1},{0,0},{-1,1}},
								{{0,2},{-1,1},{0,0},{-1,-1}},
								{{-2,0},{-1,-1},{0,0},{1,-1}},
								{{0,-2},{1,-1},{0,0},{1,1}}};;// 왼쪽보는 리을
	public int rotate_sky[][][]={{{1,-1},{0,0},{-1,1},{-2,2}},
								{{2,2},{1,1},{0,0},{-1,-1}},
								{{-1,1},{0,0},{1,-1},{2,-2}},
								{{-2,-2},{-1,-1},{0,0},{1,1}}};;// 스페이스바
	public int rotate_arr[][][][]= {{},rotate_blue,rotate_green,rotate_orange,rotate_purple,rotate_red,rotate_sky};
	//[블록종류][회전할 상태][몇번째블록을][x,y]

	// rotate_가능여부 판단 int [현재 회전상태][검사 되어질 칸의 수][x,y] 기준의 보통 인덱스는 2 sky의 경우 별개
	public int blue_check[][][] = { { { 1, -1 }, { 0, -1 }, { 1, 1 }, { 0, 1 } },
			{ { 1, 1 }, { 1, 0 }, { -1, 1 }, { -1, 0 } }, { { -1, 1 }, { 0, 1 }, { -1, -1 }, { 0, -1 } },
			{ { -1, -1 }, { -1, 0 }, { 1, -1 }, { 1, 0 } } };// 4군데
	public int green_check[][][] = { { { -1, -1 }, { 1, 0 }, { 1, 1 } }, { { 1, -1 }, { 0, 1 }, { -1, 1 } },
			{ { -1, -1 }, { 1, -1 }, { -1, 0 } }, { { 0, 1 }, { 1, -1 }, { -1, 1 } } };// 3군데
	public int orange_check[][][] = {{{-1,-1},{0,-1},{0,1},{1,1}},
									{{1,-1},{1,0},{-1,0},{-1,1}},
									{{-1,-1},{0,-1},{0,1},{1,1}},
									{{1,-1},{-1,0},{1,0},{-1,1}}};
	public int purple_check[][][] = {{{-1,-1},{1,-1},{1,1},{0,1}},
									{{1,-1},{-1,0},{-1,1},{1,1}},
									{{-1,-1},{0,-1},{-1,1},{1,1}},
									{{-1,-1},{1,-1},{-1,0},{-1,1}}};
	public int red_check[][][] ={{{1,-1},{0,1},{1,1}},
								{{-1,0},{-1,1},{1,1}},
								{{-1,-1},{0,-1},{-1,1}},
								{{-1,-1},{1,-1},{1,0}}};;
	public int sky_check[][][] ={{{},{},{},{}},
								{{},{},{},{}},
								{{},{},{},{}},
								{{},{},{},{}}};// 기준이 1(0)->2(1)->1(2)->2(3)->1(0) 순으로 변경
	public int check_arr[][][][]= {{},blue_check, green_check, orange_check, purple_check, red_check, sky_check};
	//[블록종류][현재 회전상태][검사 되어질 칸의 수][x,y]
}
