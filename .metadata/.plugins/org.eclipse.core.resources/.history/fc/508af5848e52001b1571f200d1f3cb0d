package UI;

import java.awt.Container;
import java.awt.GridLayout;
import java.awt.event.KeyEvent;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;

import Tetris.Tetris;

public class GameUI extends UI implements Runnable {

	JPanel jpTetris, jpOther, jpNext, jpScore, jpTime;
	ImageIcon iiNext;
	JLabel jlBlock[][];
	JLabel jlNextT, jlNext, jlScore, jlTime;

	Tetris gc;
	boolean isRun;

	GameUI(UIChanger uic) {
		super(uic);
		
		jpTetris=new JPanel(new GridLayout(20,10));
		jpOther=new JPanel(null);
		jpNext=new JPanel(new GridLayout(2,1));
		jpScore=new JPanel(new GridLayout(2,1));
		jpTime=new JPanel(new GridLayout(2,1));
		iiNext=new ImageIcon("image/black_block.png");
		jlBlock=new JLabel[20][10];
		for(int i=0;i<jlBlock.length;i++	) {
			for(int j=0;j<jlBlock[0].length;j++) {
				jlBlock[i][j]=new JLabel(new ImageIcon("image/black_block.png"));
			}
		}
		jlNextT=new JLabel("다음 블록");
		jlNext=new JLabel(iiNext);
		jlScore=new JLabel("스코어 : ");
		jlTime=new JLabel("진행시간 : ");
	
		isRun = true;
		gc = new Tetris();
		
		Container ct=getContentPane();
		
	}

	public void run() {
		while (isRun) {

		}
	}

	@Override
	public void keyPressed(KeyEvent e) {
		// TODO Auto-generated method stub
		int key = e.getKeyCode();
		if (key == KeyEvent.VK_UP) {

		} else if (key == KeyEvent.VK_LEFT) {

		} else if (key == KeyEvent.VK_RIGHT) {

		} else if (key == KeyEvent.VK_DOWN) {

		} else if (key == KeyEvent.VK_SPACE) {

		}
	}
}
