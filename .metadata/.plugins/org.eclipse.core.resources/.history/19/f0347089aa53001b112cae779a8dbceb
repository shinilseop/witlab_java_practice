package Tetris;

import java.util.Random;

import Main.Main;

public class Tetris extends Thread {
	public int tetris[][];
	public int sum[][];
	public int score;
	public int next;
	public Block now;
	public Timer timer;

	public boolean makeBlock;

	//rotate_Array
	public int rotate_blue[][][] = { { {} } };
	public int rotate_green[][][];
	public int rotate_orange[][][];
	public int rotate_purple[][][];
	public int rotate_red[][][];
	public int rotate_sky[][][];
	public int rotate_yellow[][][];

	boolean isRemove;
	int step;

	public Tetris() {
		step=500;
		tetris = new int[22][10];
		sum = new int[22][10];
		score = 0;
		timer=new Timer();
		now = new Block(step, new Random().nextInt(7) + 1);
		next = new Random().nextInt(7) + 1;
		System.out.println("now : " + now.block_num);
		now.start();
	}

	public void isGameOver() {
		for (int i = 0; i < tetris[0].length; i++) {
			if (tetris[0][i] > 0) {
				Main.isRun = false;
				return;
			}
		}
		for (int i = 0; i < tetris[0].length; i++) {
			if (tetris[1][i] > 0) {
				Main.isRun = false;
				return;
			}
		}
	}

	public void isLine() {
		for (int i = 21; i >= 2; i--) {
			if (tetris[i][0] > 0) {
				for (int j = 1; j < tetris[0].length; j++) {
					if (tetris[i][j] == 0)
						break;
					if (j == tetris[0].length - 1) {
						removeLine(i);
					}
				}
			}
		}
	}

	public void removeLine(int line) {
		for (int i = line; i >= 2; i--) {
			for (int j = 0; j < tetris[line].length; j++) {
				tetris[i][j] = tetris[i - 1][j];
			}
		}
		System.out.println(line + " Remove");
	}

	public void makeSum() {
		for (int i = 0; i < tetris.length; i++) {
			for (int j = 0; j < tetris[0].length; j++) {
				sum[i][j] = tetris[i][j];
			}
		}
		for (int i = 0; i < now.bi.length; i++) {
			int x = now.bi[i].x;
			int y = now.bi[i].y;
			sum[y][x] = now.block_num;
		}
	}

	public void run() {
		while (Main.isRun) {
			if(timer.time==) {
				
			}
			if (now.isLand) {
				score += (timer.time/10)*50;
				now = new Block(tetris, next);
				next = new Random().nextInt(7) + 1;
				now.start();
				isGameOver();
				isLine();
			}
			makeSum();
			try {
				sleep(1);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
}
